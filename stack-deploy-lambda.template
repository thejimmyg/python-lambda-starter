AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Domain:
    Description: Domain name that we will get a certificate for and associate with an API Gateway
    Type: String
    MinLength: "1"

  Password:
    Description: Password for the submit
    Type: String
    MinLength: "1"
    NoEcho: true

  HostedZoneId:
    Description: Hosted Zone ID of the domain, for certificate verification and for API Gateway records
    Type: String
    MinLength: "1"

  ReservedConcurrency:
    Description: Max number of Lambdas that can run at the same time, if -1 use unreserved concurrency
    Type: Number
    Default: -1

  ThrottlingRateLimit:
    Description: Max number of HTTP requests to allow per second over the long term
    Type: Number
    Default: 50

  ThrottlingBurstLimit:
    Description: Max number of HTTP requests to allow per second for a short burst
    Type: Number
    Default: 200

  Layers:
    Description: A space separated list of Layer ARNs including version
    Type: String
    Default: ""

  TableName:
    Description: DynamoDB table name
    Type: String
    Default: Table
    MinLength: "1"

  Issuer:
    Description: An optional issuer for a JWT check at the /api route. Used in the JwtAuthorizer
    Type: String
    Default: ""

  Audiences:
    Description: An optional space-separated string of audiences that should be allowed access. Used in the JwtAuthorizer
    Type: String
    Default: ""


Resources:
  HttpLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: serve/adapter/lambda_function/stack-lambda.yml
      Parameters:
        Layers: !Ref Layers
        DynamoDbTableArn: !GetAtt DynamoDbTable.Arn
        DynamoDbTableName: !Sub '${AWS::StackName}-${TableName}'
        ReservedConcurrency: !Ref ReservedConcurrency
        EncodedEnvironment: !Sub 'PASSWORD|${Password},TASKS_STATE_MACHINE_ARN|${TaskStack.Outputs.StateMachineArn}'

  TaskStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        DynamoDbTableArn: !GetAtt DynamoDbTable.Arn
        DynamoDbTableName: !Sub '${AWS::StackName}-${TableName}'
        EncodedEnvironment: !Sub 'PASSWORD|${Password}'
      TemplateURL: tasks/adapter/lambda_function/stack-tasks.yml

  TaskStartStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StartingLambdaExecutionRoleFriendlyName: !GetAtt HttpLambdaStack.Outputs.HttpLambdaExecutionRoleFriendlyName
        DynamoDbTableArn: !GetAtt DynamoDbTable.Arn
        StateMachineArn: !GetAtt TaskStack.Outputs.StateMachineArn
      TemplateURL: tasks/driver/stack-tasks-start.yml

  CertificateStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Domain: !Ref Domain
        HostedZoneId: !Ref HostedZoneId
      TemplateURL: serve/adapter/lambda_function/stack-certificate.yml

  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        LambdaArn: !GetAtt HttpLambdaStack.Outputs.HttpLambdaArn
        ThrottlingRateLimit: !Ref ThrottlingRateLimit
        ThrottlingBurstLimit: !Ref ThrottlingBurstLimit
        Issuer: !Ref Issuer
        Audiences: !Ref Audiences
      TemplateURL: serve/adapter/lambda_function/stack-api-gateway.yml

  ApiGatewayDomainStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CertificateArn: !GetAtt CertificateStack.Outputs.CertificateArn
        Domain: !Ref Domain
        HostedZoneId: !Ref HostedZoneId
        Api: !GetAtt ApiGatewayStack.Outputs.Api
        V1Stage: !GetAtt ApiGatewayStack.Outputs.V1Stage
      TemplateURL: serve/adapter/lambda_function/stack-api-gateway-domain.yml

  DynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-${TableName}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
